[{"path":"https://mtmorgan.github.io/XM2023/articles/b_course_part_1.html","id":"introduction-to-r","dir":"Articles","previous_headings":"","what":"Introduction to R","title":"B. Using R to Understand Bioinformatic Results","text":"Vectors Common types vectors include character, numeric, logical, … Can include NA indicate information available. Vectorized logical subsetting Using vectors can powerful, instance find name Brazillians require loop iteration. According Google, average waist size men 102cm. Approximating human shape cylinder, volume Benilton Martin didn’t know Benilton’s height, can’t know volume. Apparently, calculations, Martin expected volume excess 150 thousand cubic centimeters. Functions data.frame() Key concept organizing variables (columns) observed samples (rows). Typically, data.frame result reading data file, e.g., read.csv().","code":"name <- c(\"Benilton\", \"Martin\") height_cm <- c(NA, 185) is_brazillian <- c(TRUE, FALSE) name[is_brazillian] #> [1] \"Benilton\" waist_diameter_cm <- 102 ## d = 2 pi r, so r = d / (2 pi) radius_cm <- waist_diameter_cm / (2 * pi) ## V = pi r^2 h volume_cm3 <- pi * radius_cm^2 * height_cm volume_cm3 #> [1]       NA 153165.9 df <- data.frame(     name = name,     height = height_cm,     volume = volume_cm3,     is_brazillian = is_brazillian ) df #>       name height   volume is_brazillian #> 1 Benilton     NA       NA          TRUE #> 2   Martin    185 153165.9         FALSE"},{"path":"https://mtmorgan.github.io/XM2023/articles/b_course_part_1.html","id":"tidy-analysis","dir":"Articles","previous_headings":"","what":"‘tidy’ analysis","title":"B. Using R to Understand Bioinformatic Results","text":"section makes use dplyr, readr, ggplot2, plotly; make sure installed","code":"pkgs <- c(\"dplyr\", \"readr\", \"ggplot2\", \"plotly\") need <- pkgs[!pkgs %in% rownames(installed.packages())] if (length(need))     install.packages(need, repos = \"https://cran.r-project.org\")"},{"path":"https://mtmorgan.github.io/XM2023/articles/b_course_part_1.html","id":"tidy-analysis-and-visualization","dir":"Articles","previous_headings":"‘tidy’ analysis","what":"Tidy analysis and visualization","title":"B. Using R to Understand Bioinformatic Results","text":"like ‘tidy’ analysis? single representation – ‘tibble’ (aka ‘data.frame’) – covers many typical data analysis tasks, provides format shoot tempted complicated data structures ‘verbs’ consistent signatures help circumscribe data transformations available. ‘pipe’ operator |> helps structure transformations easy--understand order. dplyr package center ‘tidy’ analysis tibble() – representation data.frame, better display long wide data frames. tribble() constructs tibble way makes relationship data across rows transparent. glimpse() – providing quick look columns data tibble transposing tibble display ‘column’ single line. select() – column selection. filter(), slice() – row selection. pull() – extract single column vector. mutate() – column transformation. count() – count occurences one columns. arrange() – order rows values one columns. distinct() – reduce tibble unique rows. group_by() – perform computations groups defined one several columns. summarize() – calculate summary statstics groups. left_join(), right_join(), inner_join() – merge two tibbles based shared columns, preserving rows first (left_join()) second (right_join()) (inner_join()) tibble. Visualization key communicating results ggplot2 provides ‘grammar graphics’ produce high-quality graphics.  plotly provides interactivity (e.g., ‘mouse ’ point see details point), can useful trying communicate results exploratory manner.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  ## a familiar built-in dataset, represented as a `tibble()`... mtcars_tbl <-     mtcars |>     as_tibble(rownames = \"model\") mtcars_tbl #> # A tibble: 32 × 12 #>    model         mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <chr>       <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 Mazda RX4    21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2 Mazda RX4 …  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3 Datsun 710   22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4 Hornet 4 D…  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5 Hornet Spo…  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6 Valiant      18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7 Duster 360   14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8 Merc 240D    24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9 Merc 230     22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10 Merc 280     19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> # ℹ 22 more rows ## count # of cars with 4, 6, ... cylinders mtcars_tbl |>     count(cyl) #> # A tibble: 3 × 2 #>     cyl     n #>   <dbl> <int> #> 1     4    11 #> 2     6     7 #> 3     8    14  ## select specific columns and filter rows based on 'cyl' and 'mpg' mtcars_tbl |>     select(model, mpg, cyl, disp) |>     filter(         cyl >= 8,         mpg > 15     ) #> # A tibble: 8 × 4 #>   model               mpg   cyl  disp #>   <chr>             <dbl> <dbl> <dbl> #> 1 Hornet Sportabout  18.7     8  360  #> 2 Merc 450SE         16.4     8  276. #> 3 Merc 450SL         17.3     8  276. #> 4 Merc 450SLC        15.2     8  276. #> 5 Dodge Challenger   15.5     8  318  #> 6 AMC Javelin        15.2     8  304  #> 7 Pontiac Firebird   19.2     8  400  #> 8 Ford Pantera L     15.8     8  351 library(ggplot2) plt <-     ggplot(mtcars_tbl) +     aes(x = factor(cyl), y = mpg) +     geom_boxplot() +     geom_jitter() plt library(plotly) plt <-     ggplot(mtcars_tbl) +     aes(x = factor(cyl), y = mpg, text = model) +     geom_jitter(width = .25) +     geom_boxplot() ggplotly(plt)"},{"path":"https://mtmorgan.github.io/XM2023/articles/b_course_part_1.html","id":"case-study-single-cell-umap","dir":"Articles","previous_headings":"","what":"Case study: single-cell UMAP","title":"B. Using R to Understand Bioinformatic Results","text":"Load ‘csv’ (comma-separated value) file prepared ‘UMAP’.","code":"## use `file.choose()` or similar for your own data sets umap_csv_file <- system.file(package= \"XM2023\", \"extdata\", \"umap.csv\") umap_data <- readr::read_csv(umap_csv_file) umap_data"},{"path":"https://mtmorgan.github.io/XM2023/articles/b_course_part_1.html","id":"reproducibility","dir":"Articles","previous_headings":"","what":"Reproducibility","title":"B. Using R to Understand Bioinformatic Results","text":"Packages Provide robust way document requirements analysis, organize complicated analyses distinct steps. ’ve found pkgdown useful presenting packages users. instance, material workshop available pkgdown. Vignettes Explict description analysis steps (good bioinformatician), coupled text graphics (good collaboration). Git Incremental ‘commits’ analysis progresses. Commits allow confident exploration – last commit always available ‘start ’. Tags allow checkpointing analysis, e.g., version analysis used original manuscript submission; version analysis associated revision final publciation. Containers fully reproducible analysis challenging implement – specifying software version enough, easy future investigator re-establish. Containers like docker singularity provide one mechanism creating ‘snapshot’ capturing exactly software used. Beware! Complicated containers might result fully reproducible analysis, provide little confidence robustness analysis.","code":"devtools::create(\"MyAnalysis\") setwd(\"MyAnalysis\") usethis::use_vignette(\"a_data_management\", \"A. Data management\") usethis::use_vignette(\"b_exploratory_visualization\", \"B. Exploration\") usethis::use_pkgdown() pkgdown::build_site()"},{"path":"https://mtmorgan.github.io/XM2023/articles/b_course_part_1.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"B. Using R to Understand Bioinformatic Results","text":"document produced following R software:","code":"sessionInfo() #> R version 4.3.0 (2023-04-21) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: Etc/UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] plotly_4.10.2 ggplot2_3.4.2 dplyr_1.1.2   #>  #> loaded via a namespace (and not attached): #>  [1] tidyr_1.3.0       sass_0.4.6        utf8_1.2.3        generics_0.1.3    #>  [5] stringi_1.7.12    digest_0.6.31     magrittr_2.0.3    evaluate_0.21     #>  [9] grid_4.3.0        fastmap_1.1.1     rprojroot_2.0.3   jsonlite_1.8.5    #> [13] httr_1.4.6        purrr_1.0.1       fansi_1.0.4       crosstalk_1.2.0   #> [17] viridisLite_0.4.2 scales_1.2.1      lazyeval_0.2.2    textshaping_0.3.6 #> [21] jquerylib_0.1.4   cli_3.6.1         rlang_1.1.1       ellipsis_0.3.2    #> [25] munsell_0.5.0     withr_2.5.0       cachem_1.0.8      yaml_2.3.7        #> [29] tools_4.3.0       memoise_2.0.1     colorspace_2.1-0  vctrs_0.6.2       #> [33] R6_2.5.1          lifecycle_1.0.3   stringr_1.5.0     fs_1.6.2          #> [37] htmlwidgets_1.6.2 ragg_1.2.5        pkgconfig_2.0.3   desc_1.4.2        #> [41] pkgdown_2.0.7     pillar_1.9.0      bslib_0.4.2       gtable_0.3.3      #> [45] glue_1.6.2        data.table_1.14.8 systemfonts_1.0.4 xfun_0.39         #> [49] tibble_3.2.1      tidyselect_1.2.0  highr_0.10        knitr_1.43        #> [53] farver_2.1.1      htmltools_0.5.5   rmarkdown_2.22    labeling_0.4.2    #> [57] compiler_4.3.0"},{"path":"https://mtmorgan.github.io/XM2023/articles/c_course_part_2.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"C. R / Bioconductor for Genomic Analysis","text":"document produced following R software:","code":"sessionInfo() #> R version 4.3.0 (2023-04-21) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: Etc/UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.2       cli_3.6.1         knitr_1.43        rlang_1.1.1       #>  [5] xfun_0.39         stringi_1.7.12    purrr_1.0.1       textshaping_0.3.6 #>  [9] jsonlite_1.8.5    glue_1.6.2        rprojroot_2.0.3   htmltools_0.5.5   #> [13] ragg_1.2.5        sass_0.4.6        rmarkdown_2.22    evaluate_0.21     #> [17] jquerylib_0.1.4   fastmap_1.1.1     yaml_2.3.7        lifecycle_1.0.3   #> [21] memoise_2.0.1     stringr_1.5.0     compiler_4.3.0    fs_1.6.2          #> [25] systemfonts_1.0.4 digest_0.6.31     R6_2.5.1          magrittr_2.0.3    #> [29] bslib_0.4.2       tools_4.3.0       pkgdown_2.0.7     cachem_1.0.8      #> [33] desc_1.4.2"},{"path":"https://mtmorgan.github.io/XM2023/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Morgan. Author, maintainer. NIH NHGRI U24HG004059. Funder.","code":""},{"path":"https://mtmorgan.github.io/XM2023/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Morgan M (2023). XM2023: Talk Short Course Material R / Bioconductor XM2023. R package version 0.0.0.9002, https://mtmorgan.github.io/XM2023MM/.","code":"@Manual{,   title = {XM2023: Talk and Short Course Material for R / Bioconductor XM2023},   author = {Martin Morgan},   year = {2023},   note = {R package version 0.0.0.9002},   url = {https://mtmorgan.github.io/XM2023MM/}, }"},{"path":"https://mtmorgan.github.io/XM2023/index.html","id":"xm2023--brazilian-association-for-bioinformatics-and-computational-biology","dir":"","previous_headings":"","what":"Talk and Short Course Material for R / Bioconductor XM2023","title":"Talk and Short Course Material for R / Bioconductor XM2023","text":"resource includes material presented XM2023, international conference Brazilian Association Bioinformatics Computational Biology, held Curitiba Paraná, 13 16 June 2023. Dr. Morgan presented talk two short courses. talk addressed contribution future Bioconductor. . Bioconductor Advances Science Two short workshops illustrate use R Bioconductor genomic analysis, emphasizing modern single-cell approaches. first workshop introduces R, explores essential data management tasks (instance summarizing cell types plotting ‘UMAP’ single-cell RNASeq experiment) using ‘tidy’ paradigm. previous experience R required. second workshop walks single-cell RNAseq analysis using R Bioconductor packages. Users familiar R benefit workshop, users levels able follow along. B. Using R Understand Bioinformatic Results C. R / Bioconductor Genomic Analysis","code":""}]
